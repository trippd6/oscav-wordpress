# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

worker_rlimit_nofile 999999;

events {
    use epoll;
    multi_accept on;
    worker_connections 40000;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_cache_status"';

    add_header 'Access-Control-Allow-Origin' '*';

    map $http_user_agent $mobile_request {
                 default                  fullversion;
                 "~*ipad"    fullversion;
                 "~*android.*mobile"   wptouch;
                 "~*iphone"    wptouch;
                 "~*ipod.*mobile"   wptouch;
                 "~*BlackBerry*Mobile Safari"  wptouch;
                 "~*BB*Mobile Safari"   wptouch;
                 "~*Opera.*Mini/7"   wptouch;
                 "~*IEMobile/10.*Touch"   wptouch;
                 "~*IEMobile/11.*Touch"   wptouch;
                 "~*IEMobile/7.0"   wptouch;
                 "~*IEMobile/9.0"   wptouch;
                 "~*Firefox.*Mobile"   wptouch;
                 "~*webOS"    wptouch;
    }

    access_log  /var/log/nginx/access.log  main;
    fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m max_size=5000m;
    fastcgi_cache_key "$scheme$request_method$host$c_uri$mobile_request$http_x_forwarded_proto";
    fastcgi_cache_lock on;
    fastcgi_cache_use_stale error timeout invalid_header http_500 updating;
    fastcgi_cache_valid 200 302 301 60m;
    fastcgi_cache_valid 404 5m;
    fastcgi_ignore_headers Cache-Control Expires X-Accel-Expires;

    proxy_cache_path /etc/nginx/cache2 levels=1:2 keys_zone=PROXYCACHE:100m inactive=60m max_size=1024m;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_valid 200 302 301 60m;
    proxy_cache_valid 404 5m;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    
    client_max_body_size 64m;

    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css text/javascript application/x-javascript application/javascript application/json application/xml application/xml+rss;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 backlog=32768 default_server;
        listen       [::]:80 default_server;
        server_name  $hostname;
        root         /var/www/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        index index.php;
        location / {
                try_files $uri $uri/ /index.php?$args;
        }
	
	#this section removes UTM query parmaters for the purposes of cache keys
        set $c_uri $args; # e.g. "param1=true&param4=false"
        
        if ($c_uri ~ (.*)(?:&|^)utm_source=[^&]*(.*)) {
           set $c_uri $1$2;
        }

        if ($c_uri ~ (.*)(?:&|^)utm_term=[^&]*(.*)) {
           set $c_uri $1$2;
        }
        
        if ($c_uri ~ (.*)(?:&|^)utm_campaign=[^&]*(.*)) {
           set $c_uri $1$2;
        }        

        if ($c_uri ~ (.*)(?:&|^)utm_medium=[^&]*(.*)) {
           set $c_uri $1$2;
        }

        if ($c_uri ~ (.*)(?:&|^)utm_content=[^&]*(.*)) {
           set $c_uri $1$2;
        }

        if ($c_uri ~ ^&(.*)) {
           set $c_uri $1;
        }

        set $c_uri $is_args$c_uri;

        if ($c_uri ~ ^\?$) {
           set $c_uri "";
        }

	set $orig_uri $request_uri;

	if ($orig_uri ~ ^([^?]*).*) {
		set $orig_uri $1;
	}
   
        # finally we have stripped out utms and has nice cache key
        set $c_uri $orig_uri$c_uri;

	set $skip_cache 0;

	#if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
	if ($request_uri ~* "/(wp-admin/|wp-login.php)")  {
		set $skip_cache 1;
	}   

	# Disabled because some tempaltes pass in query strings for no reason
	#if ($query_string != "") {
	#	set $skip_cache 1;
	#}   

	#if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
	if ($http_cookie ~* "wordpress_logged_in_") {
		set $skip_cache 1;
	}

        location ~ [^/]\.php(/|$) {
                fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                if (!-f $document_root$fastcgi_script_name) {
                        return 404;
                }
                include /etc/nginx/fastcgi_params;
                fastcgi_pass php:9000;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
                
	        fastcgi_no_cache $skip_cache;
		fastcgi_cache_bypass $skip_cache;
		fastcgi_cache WORDPRESS;
                fastcgi_cache_valid 200 60m;
        }


        location ~ /purge(/.*) {
		fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1fullversion$http_x_forwarded_proto";
        }

        location ~ /mpurge(/.*) {
                fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1wptouch$http_x_forwarded_proto";
        }

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
	       access_log off; log_not_found off; expires 24h;
	       location ~.*\.(jpg|jpeg|png|gif)$ {
                   error_page 404 = @yavli;
               }
	}

        location @yavli {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Host $host;
          proxy_pass http://steg.yavli.com;
          proxy_cache PROXYCACHE;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}

